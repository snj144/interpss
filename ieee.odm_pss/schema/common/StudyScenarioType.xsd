<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ns="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.ieee.org/odm/Schema/2008" 
	xmlns:pss="http://www.ieee.org/odm/Schema/2008"
	elementFormDefault="qualified">

	<include schemaLocation="DataType.xsd"></include>
	<include schemaLocation="ModificationType.xsd"></include>

	<annotation>
		<documentation>Copyright www.interpss.org 2008-2011</documentation>
	</annotation>
	
	<!-- 
		elements for defining study scenario for run analysis of the base case data
		   Study scenario definition is software implementation specific. ODM study scenario is designed 
		   such it can accommodate other study scenario schema by extension   
	 -->

	<complexType name="StudyScenarioXmlType" abstract="true">
        <annotation><documentation>
        Base Study scenario type for extension
        </documentation></annotation>	
		<complexContent>
			<extension base="pss:IDRecordXmlType">
				<sequence>
					<element name="analysisCategory" minOccurs="1" maxOccurs="1" type="pss:AnalysisCategoryEnumType"></element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	
	<ns:complexType name="BaseAnalysisTypeXmlType" abstract="true">
		<ns:complexContent>
			<ns:extension base="pss:BaseRecordXmlType"></ns:extension>
		</ns:complexContent>
	</ns:complexType>

	<ns:complexType name="BaseAlgorithmXmlType" abstract="true">
		<ns:complexContent>
			<ns:extension base="pss:BaseRecordXmlType"></ns:extension>
		</ns:complexContent>
	</ns:complexType>
	
	<complexType name="BaseScenarioXmlType">
		<annotation><documentation>
		for define a study scenario. 
		</documentation></annotation>
		<complexContent>
			<extension base="pss:IDRecordXmlType">
				<sequence>
					<element name="modifcation" type="pss:ModifyRecordXmlType"	minOccurs="0" maxOccurs="1">
						<annotation><documentation>
						In addition to the modification defined at the StudyCase level,
						modification can be also defined at each scenario level, used for example 
						to create N-1 contingency scenario
						</documentation></annotation>
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	
	<ns:complexType name="AclfAlgorithmXmlType">
		<ns:complexContent>
			<ns:extension base="pss:BaseAnalysisTypeXmlType">
				<ns:sequence>
					<ns:element name="lfMethod" minOccurs="1" maxOccurs="1" type="pss:LfMethodEnumType"/>
					<ns:element name="maxIterations" type="ns:int" minOccurs="1" maxOccurs="1"/>
					<ns:element name="tolerance" type="pss:ApparentPowerXmlType" minOccurs="1" maxOccurs="1"/>
					<ns:element name="initBusVoltage" type="ns:boolean" minOccurs="0" maxOccurs="1"></ns:element>
					<ns:element name="accFactor" type="ns:double" maxOccurs="1" minOccurs="0"></ns:element>
					<ns:element name="nonDivergent" type="ns:boolean" maxOccurs="1" minOccurs="0"></ns:element>
				</ns:sequence>
			</ns:extension>
		</ns:complexContent>
	</ns:complexType>	
</schema>