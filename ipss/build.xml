<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="build_dist" name="com.interpss.editor.jgraph">
    <target description="init setup" name="init">
      	<property name="dev_base" value="C:/eclipse/InterpssDev"/>
      	<property name="cloud_base" value="C:/eclipse/CloudDev"/>
      	<property name="dev_lib" value="${dev_base}/ipss.lib/lib"/>
      	<property name="pssl_lib" value="${dev_base}/ipss.pssl.scala/lib"/>
      	<property name="gl.odm_lib" value="${cloud_base}/ipss.gl.odm/war/WEB-INF/lib"/>
      	<property name="opencim" value="C:\eclipse\opencimDev\ipss.cim.library"/>
      	<property name="dist_base" value="C:/eclipse/GEditor"/>
      	<property name="fit_base" value="C:/eclipse/InterpssDev/ipss.fit/fitnesse"/>
      	<property name="svn_lib" value="${dev_base}/ipss.lib/lib/ipss"/>

      	<property name="lib_base" value="${dist_base}/lib"/>
      	<property name="lib_path" value="${lib_base}/jgraph.jar"/>

    	<property name="ipss_base" value="${dist_base}/lib/ipss"/>
    	<property name="lib_ipss_path" value="${ipss_base}/ipss_core.jar;
    					      ${ipss_base}/ipss_dist.jar;
    					      ${ipss_base}/ipss_simu.jar;
    					      ${ipss_base}/ipss_geditor_images.jar"/>

    	<property name="emf_base" value="${dist_base}/lib/eclipse"/>
    	<property name="lib_emf_path" value="${emf_base}/org.eclipse.emf.common_2.2.0.jar;
    					     ${emf_base}/org.eclipse.emf.ecore_2.2.0.jarr;
    					     ${emf_base}/org.eclipse.emf_2.2.0.jar;
    					     ${emf_base}/org.eclipse.emf.ecore.xmi_2.2.0.jar;"/>
    	<property name="SrcBackup" value="F:/backup"/>
    </target>
  
    <target depends="init" description="run the GEditor" name="run">
        <java classname="com.interpss.editor.GEditor" fork="yes"> 
        	<classpath>
          		<pathelement path="${class_path};${lib_path};${lib_ipss_path};${lib_emf_path}"/>
        	</classpath>
        </java>
    </target>	
	
    <target depends="jar_lib,copy_fit,copy_properties,copy_report_template,copyIpssSchema,copy_pssl" description="Build distribution" name="build_dist">
    </target>	

    <target depends="init" description="jar ipss lib files" name="jar_lib">
	  <jar destfile="${lib_base}/ipss.jar" 
	  		basedir="${dev_base}/ipss/runtime" 
	  		excludes="lib/**,log/**/,projects/**,reportdesign/**.repdesign,**/*.properties,**/.project,**/.classpath,**/.nbattrs,**/*.xml,**/*.log" />	

	  <jar destfile="${svn_lib}/ipss_editor.jar" 
	  		basedir="${dev_base}/ipss.editor/runtime" 
	  		excludes="CVS/**,model/**" />	
	  <jar destfile="${ipss_base}/ipss_editor.jar" 
	  		basedir="${dev_base}/ipss.editor/runtime" 
	  		excludes="CVS/**,model/**" />	

	  <jar destfile="${svn_lib}/ipss_pad.jar" 
	  		basedir="${dev_base}/ipss.editor.pad/runtime" 
	  		excludes="CVS/**,model/**" />	
	  <jar destfile="${ipss_base}/ipss_pad.jar" 
	  		basedir="${dev_base}/ipss.editor.pad/runtime" 
	  		excludes="CVS/**,model/**" />	

   	  <jar destfile="${svn_lib}/ipss_core.jar">
   	  	<fileset dir="${dev_base}/ipss.common/runtime" excludes="CVS/**,model/**" />	
	  	<fileset dir="${dev_base}/ipss.core_EMF/runtime" excludes="CVS/**,model/**" />	
    	<fileset dir="${dev_base}/ipss.dstab_EMF/runtime" excludes="CVS/**,model/**" />
		<fileset dir="${dev_base}/ipss.opf_EMF1/runtime" excludes="CVS/**,model/**" />
  	  	<fileset dir="${dev_base}/ipss.dist_EMF/runtime" excludes="CVS/**,model/**" />	
   	  	<fileset dir="${dev_base}/ipss.simu_EMF/runtime" excludes="CVS/**,model/**" />	
	  </jar>		
	  <jar destfile="${ipss_base}/ipss_core.jar">
   	  	<fileset dir="${dev_base}/ipss.common/runtime" excludes="CVS/**,model/**" />	
	  	<fileset dir="${dev_base}/ipss.core_EMF/runtime" excludes="CVS/**,model/**" />	
    	<fileset dir="${dev_base}/ipss.dstab_EMF/runtime" excludes="CVS/**,model/**" />
		<fileset dir="${dev_base}/ipss.opf_EMF1/runtime" excludes="CVS/**,model/**" />
  	  	<fileset dir="${dev_base}/ipss.dist_EMF/runtime" excludes="CVS/**,model/**" />	
   	  	<fileset dir="${dev_base}/ipss.simu_EMF/runtime" excludes="CVS/**,model/**" />	
	  </jar>	

   	  <jar destfile="${svn_lib}/ipss_ext.jar">
   	  		<fileset dir="${dev_base}/ipss.ext_EMF/runtime" excludes="CVS/**,model/**" />	
	  </jar>		
	  <jar destfile="${ipss_base}/ipss_ext.jar">
   	  		<fileset dir="${dev_base}/ipss.ext_EMF/runtime" excludes="CVS/**,model/**" />	
	  </jar>	

	  <jar destfile="${svn_lib}/ipss_pssl.jar">
   	  		<fileset dir="${dev_base}/ipss.pssl/runtime" excludes="CVS/**,model/**" />	
	  </jar>	
	  <!-- jar destfile="${pssl_lib}/ipss_pssl.jar">
   	  		<fileset dir="${dev_base}/ipss.pssl/runtime" excludes="CVS/**,model/**" />	
	  </jar-->	

   	  <jar destfile="${svn_lib}/ipss_plugin.jar"> 
 	  	  <fileset dir="${dev_base}/ipss.plugin/runtime" excludes="CVS/**,model/**" />	
	  	  <fileset dir="${dev_base}/ipss.plugin.dstab/runtime" excludes="CVS/**,model/**" />	
	  	  <fileset dir="${dev_base}/ipss.plugin.base/bin" excludes="CVS/**,model/**" />	
      </jar>	
   	  <jar destfile="${ipss_base}/ipss_plugin.jar"> 
	  	  <fileset dir="${dev_base}/ipss.plugin/runtime" excludes="CVS/**,model/**" />	
	  	  <fileset dir="${dev_base}/ipss.plugin.dstab/runtime" excludes="CVS/**,model/**" />	
	  	  <fileset dir="${dev_base}/ipss.plugin.base/bin" excludes="CVS/**,model/**" />	
      </jar>

  	  <jar destfile="${ipss_base}/ipss_core.jar">
     	<fileset dir="${dev_base}/ipss.common/runtime" excludes="CVS/**,model/**" />	
  	  	<fileset dir="${dev_base}/ipss.core_EMF/runtime" excludes="CVS/**,model/**" />	
      	<fileset dir="${dev_base}/ipss.dstab_EMF/runtime" excludes="CVS/**,model/**" />
  		<fileset dir="${dev_base}/ipss.opf_EMF1/runtime" excludes="CVS/**,model/**" />
    	<fileset dir="${dev_base}/ipss.dist_EMF/runtime" excludes="CVS/**,model/**" />	
     	<fileset dir="${dev_base}/ipss.simu_EMF/runtime" excludes="CVS/**,model/**" />	
  	  </jar>	
    	
      <jar destfile="${svn_lib}/ipss_plugin.grid.jar" 
      		basedir="${dev_base}/ipss.plugin.grid/runtime" 
      		excludes="CVS/**,model/**" />	
      <jar destfile="${ipss_base}/ipss_plugin.grid.jar" 
      		basedir="${dev_base}/ipss.plugin.grid/runtime" 
      		excludes="CVS/**,model/**" />

    <jar destfile="${svn_lib}/ipss_xml.jar" 
   	  		basedir="${dev_base}/ipss.xml/runtime" 
   	  		excludes="CVS/**,model/**" />	
   	  <jar destfile="${ipss_base}/ipss_xml.jar" 
   	  		basedir="${dev_base}/ipss.xml/runtime" 
   	  		excludes="CVS/**,model/**" />   	  			

   	  <jar destfile="${svn_lib}/ipss_editor_simu.jar" 
   	  		basedir="${dev_base}/ipss.editor.simu/runtime" 
   	  		excludes="CVS/**,model/**" />	
   	  <jar destfile="${ipss_base}/ipss_editor_simu.jar" 
   	  		basedir="${dev_base}/ipss.editor.simu/runtime" 
   	  		excludes="CVS/**,model/**" />	

   	  <jar destfile="${ipss_base}/ipss.test.user.jar" 
   	  		basedir="${dev_base}/ipss.test.user/runtime" 
   	  		excludes="CVS/**,model/**" />	

   	  <jar destfile="${svn_lib}/ipss_editor_ui.jar" 
   	  		basedir="${dev_base}/ipss.editor.ui/runtime" 
   	  		excludes="CVS/**,model/**" />	
   	  <jar destfile="${ipss_base}/ipss_editor_ui.jar" 
   	  		basedir="${dev_base}/ipss.editor.ui/runtime" 
   	  		excludes="CVS/**,model/**" />	

   	  <jar destfile="${svn_lib}/ipss_jgraph.jar" 
   	  		basedir="${dev_base}/ipss.editor.jgraph/runtime" 
   	  		excludes="CVS/**,model/**" />	
   	  <jar destfile="${ipss_base}/ipss_jgraph.jar" 
   	  		basedir="${dev_base}/ipss.editor.jgraph/runtime" 
   	  		excludes="CVS/**,model/**" />	

   	  <jar destfile="${dev_base}/ipss.lib/lib/ieee/ieee.odm_pss.jar" 
   	  		basedir="${dev_base}/ieee.odm_pss/runtime" 
   	  		excludes="CVS/**,model/**" />	
   	  <jar destfile="${lib_base}/ieee/ieee.odm_pss.jar" 
   	  		basedir="${dev_base}/ieee.odm_pss/runtime" 
   	  		excludes="CVS/**,model/**" />	
	  <copy file="${dev_base}/ieee.odm_pss/lib/ieee.odm_pss.schemas.jar" 
		    todir="${lib_base}/ieee"/>

   	  <jar destfile="${svn_lib}/tsinghua.jar" 
   	  		basedir="${dev_base}/tsinghua/bin" 
   	  		excludes="CVS/**,model/**" />	
   	  <jar destfile="${lib_base}/custom/tsinghua.jar" 
   	  		basedir="${dev_base}/tsinghua/bin" 
   	  		excludes="CVS/**,model/**" />	

	  <copy file="${dev_base}/ipss.lib/lib/ipss/ipss_schemas.jar" 
		    todir="${lib_base}/ipss"/>
   	</target>	

    <target depends="init" description="copy sqlMap files to GEditor" name="copy_properties">
    	<!--copy todir="${dist_base}/properties/sqlMapConfig">
    	      <fileset dir="${dev_base}/ipss/runtime/sqlMapConfig">
    	         <exclude name="**/SqlMapConfig.xml" />
    	      </fileset>
    	</copy--> 
    	<!--copy todir="${dist_base}/properties/springConfig" >  use classpath based approach
    		  <fileset dir="${dev_base}/ipss/properties/springConfig" />
    	</copy-->
    	<!--copy todir="${fit_base}/properties">
    			<fileset dir="${dev_base}/ipss/properties" />
    	</copy-->
    </target>	
			
    <target depends="init" description="copy report templates to GEditor" name="copy_report_template">
    	<copydir src="${dev_base}/ipss/reportTemplate"
    	         dest="${dist_base}/reportTemplate"
    	         includes="**/*.jasper"
    	/>
    </target>	

    <target depends="init" description="copy report templates to GEditor" name="copyIpssSchema">
    	<copydir src="${dev_base}/ipss.xml/schema"
    	         dest="${dist_base}/schema"
    	         includes="**/*.xsd"
    	/>
    </target>	

	<target depends="init" description="copy ipss lib files to ipss.pssl.lib" name="copy_pssl">
		<copy file="${lib_base}/ipss/ipss_core.jar" todir="${pssl_lib}"/>
		<copy file="${lib_base}/ipss/ipss_ext.jar" todir="${pssl_lib}"/>
		<copy file="${lib_base}/ipss/ipss_plugin.jar" todir="${pssl_lib}"/>
		<copy file="${lib_base}/ipss/ipss_plugin.grid.jar" todir="${pssl_lib}"/>
		<copy file="${lib_base}/ipss/ipss_schemas.jar" todir="${pssl_lib}"/>
		<copy file="${lib_base}/ieee/ieee.odm_pss.jar" todir="${pssl_lib}"/>
		<copy file="${lib_base}/ieee/ieee.odm_pss.schemas.jar" todir="${pssl_lib}"/>

		<copy file="${lib_base}/apache/commons-math.jar" todir="${pssl_lib}"/>
		<copy file="${lib_base}/eclipse/org.eclipse.emf.common.jar" todir="${pssl_lib}"/>
		<copy file="${lib_base}/eclipse/org.eclipse.emf.ecore.jar" todir="${pssl_lib}"/>
		<copy file="${lib_base}/eclipse/org.eclipse.emf.ecore.xmi.jar" todir="${pssl_lib}"/>
		<copy file="${lib_base}/eclipse/org.eclipse.emf.jar" todir="${pssl_lib}"/>
		<copy file="${lib_base}/spring/spring-2.5.6.jar" todir="${pssl_lib}"/>
		<copy file="${lib_base}/xml/xbean.jar" todir="${pssl_lib}"/>

		<copy file="${lib_base}/ieee/ieee.odm_pss.jar" todir="${gl.odm_lib}"/>
		<copy file="${lib_base}/ieee/ieee.odm_pss.schemas.jar" todir="${gl.odm_lib}"/>
		<copy file="${lib_base}/ipss/ipss_core.jar" todir="${gl.odm_lib}"/>
		<copy file="${lib_base}/ipss/ipss_ext.jar" todir="${gl.odm_lib}"/>
		<copy file="${lib_base}/ipss/ipss_plugin.jar" todir="${gl.odm_lib}"/>
		<copy file="${lib_base}/ipss/ipss_plugin.grid.jar" todir="${gl.odm_lib}"/>

		<copy file="${lib_base}/ieee/ieee.odm_pss.jar" todir="${opencim}/odm"/>
		<copy file="${lib_base}/ieee/ieee.odm_pss.schemas.jar" todir="${opencim}/odm"/>
		<copy file="${lib_base}/ipss/ipss_core.jar" todir="${opencim}/interpss"/>
		<copy file="${lib_base}/ipss/ipss_ext.jar" todir="${opencim}/interpss"/>
		<copy file="${lib_base}/ipss/ipss_plugin.jar" todir="${opencim}/interpss"/>
    </target>	

	<target depends="init" description="copy ipss lib files to finesse" name="copy_fit">
	<copy todir="${fit_base}/lib/ipss">
	    	<fileset dir="${ipss_base}/" />
        </copy>
	<copy todir="${fit_base}/lib/ieee">
	    	<fileset dir="${lib_base}/ieee" />
        </copy>
<!--        
	<copy todir="${fit_base}/lib/ipss">
	    	<fileset dir="${dist_base}/plugin/custController/dist/" />
        </copy>
-->        
	<copy todir="${fit_base}/lib/db">
	    	<fileset dir="${lib_base}/db" />
        </copy>
	<copy todir="${fit_base}/lib/custom">
	    	<fileset dir="${lib_base}/custom" />
        </copy>
	<copy todir="${fit_base}/lib/eclipse">
	    	<fileset dir="${lib_base}/eclipse"/>
        </copy>
	<copy file="${ipss_base}/ipss.test.user.jar" 
		todir="${fit_base}/FitNesseRoot/files/usertest/lib/ipss"/>
	<copy file="${dist_base}/lib/ipss.jar" 
		todir="${fit_base}/lib"/>
    </target>	

	<target depends="init" name="copy2H">
		<copy todir="${SrcBackup}/ipss/ipss.common">
	    	<fileset dir="${dev_base}/ipss.common" >
      			<exclude name="**/*.class"/>
    		</fileset>	    	
        </copy>

		<copy todir="${SrcBackup}/ipss/ipss.core">
	    	<fileset dir="${dev_base}/ipss.core_EMF" >
      			<exclude name="**/*.class"/>
    		</fileset>	    	
        </copy>

		<copy todir="${SrcBackup}/ipss/ipss.dist">
	    	<fileset dir="${dev_base}/ipss.dist_EMF" >
      			<exclude name="**/*.class"/>
    		</fileset>	    	
        </copy>

		<copy todir="${SrcBackup}/ipss/ipss.dstab">
	    	<fileset dir="${dev_base}/ipss.dstab_EMF" >
      			<exclude name="**/*.class"/>
    		</fileset>	    	
        </copy>

		<copy todir="${SrcBackup}/ipss/ipss.opf">
	    	<fileset dir="${dev_base}/ipss.opf_EMF1" >
      			<exclude name="**/*.class"/>
    		</fileset>	    	
        </copy>

		<copy todir="${SrcBackup}/ipss/ipss.simu">
	    	<fileset dir="${dev_base}/ipss.simu_EMF">
      			<exclude name="**/*.class"/>
    		</fileset>	    	
        </copy>

		<copy todir="${SrcBackup}/ipss/ipss.ext">
	    	<fileset dir="${dev_base}/ipss.ext_EMF">
      			<exclude name="**/*.class"/>
    		</fileset>	    	
        </copy>

		<copy todir="${SrcBackup}/ipss/ipss.simu.test">
	    	<fileset dir="${dev_base}/ipss.simu.test">
      			<exclude name="**/*.class"/>
    		</fileset>	    	
        </copy>
        
		<copy todir="${SrcBackup}/ipss/ipss.cim.adapter">
	    	<fileset dir="${dev_base}/ipss.cim.adapter">
      			<exclude name="**/*.class"/>
    		</fileset>	    	
        </copy>

		<copy todir="${SrcBackup}/ipss/ipss.cim.model">
	    	<fileset dir="${dev_base}/ipss.cim.model">
      			<exclude name="**/*.class"/>
    		</fileset>	    	
        </copy>

		<copy todir="${SrcBackup}/ipss/ipss.cim.test">
	    	<fileset dir="${dev_base}/ipss.cim.test">
      			<exclude name="**/*.class"/>
    		</fileset>	    	
        </copy>

		<copy todir="${SrcBackup}/ipss/ipss.cim.library">
	    	<fileset dir="${dev_base}/ipss.cim.library">
      			<exclude name="**/*.class"/>
    		</fileset>	    	
        </copy>

		<copy todir="${SrcBackup}/ipss/ipss.cim.tool">
	    	<fileset dir="${dev_base}/ipss.cim.tool">
      			<exclude name="**/*.class"/>
    		</fileset>	    	
        </copy>

		<copy todir="${SrcBackup}/ipss/ipss.wb">
	    	<fileset dir="${dev_base}/ipss.wb">
      			<exclude name="**/*.class"/>
    		</fileset>	    	
        </copy>

		<copy todir="${SrcBackup}/ipss/RoseModel">
	    	<fileset dir="${dev_base}/RoseModel">
      			<exclude name="**/*.java,**/*.class"/>
    		</fileset>	    	
        </copy>
    </target>	

	<target depends="init" name="copySVN">
		<copy todir="F:/SVN">
	    	<fileset dir="C:/SVN" />
        </copy>
    </target>	
</project>
