<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
         xmlns:p="http://www.springframework.org/schema/p"
	     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	     xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<!--
		Custom File Adapter object list
		===============================
		
		defining a custom adapter includes the following two steps:
		
		1) define the adapter 
			id: a unique custom adapter Spring Object id
			class: the full class name of the adapter implementation
			extension: custom file extension, it has to be unique. 
			description: description for the custom file
		2) add the adapter to the customAdapterList
		
			<list>
				...
				<ref bean="myCustomAdapterId"/>
			</list>
	-->
	<bean id="fileAdapterIeeeCommonFormat" 
	      class="org.interpss.custom.fadpter.IeeeCDFFormat"
	      scope="singleton"	
	      p:name="IEEE Common Format"
	      p:fileFilterString="dat"
	      p:extension="ieee"
	      p:description="IEEE Common Format">
	  	<constructor-arg>
	  		<ref bean="ipssMsgHub"/></constructor-arg>
	</bean>	
	
	<bean id="fileAdapterBPAFormat" 
	      class="org.interpss.custom.fadpter.BPAFormat"
	      scope="singleton"	
	      p:name="BPA Format"
	      p:fileFilterString="dat"
	      p:extension="bpa"
	      p:description="BPA Format">
	  	<constructor-arg>
	  		<ref bean="ipssMsgHub"/></constructor-arg>
	</bean>	

	<bean id="fileAdapterBPAFormatDStab" 
	      class="org.interpss.custom.fadpter.BPAFormat"
	      scope="singleton"	
	      p:name="BPA Format DStab"
	      p:fileFilterString="dat"
	      p:extension="bpa_lf"
	      p:description="BPA Format for DStab">
	  	<constructor-arg>
	  		<ref bean="ipssMsgHub"/></constructor-arg>
	</bean>	

	<bean id="fileAdapterIeeeODMXml" 
	      class="org.interpss.custom.fadpter.ODMFormat"
	      scope="singleton"	
	      p:name="IEEE ODM Xml Model"
	      p:fileFilterString="xml"
	      p:extension="odm"
	      p:description="IEEE ODM Xml Model">
	  	<constructor-arg>
	  		<ref bean="ipssMsgHub"/></constructor-arg>
	</bean>	

	<bean id="fileAdapterUCTEFormat" 
	      class="org.interpss.custom.fadpter.UCTEFormat"
	      scope="singleton"	
	      p:name="UCTE Format"
	      p:fileFilterString="uct"
	      p:extension="uct"
	      p:description="UCTE Data Exchange Format for LF and SC">
	  	<constructor-arg>
	  		<ref bean="ipssMsgHub"/></constructor-arg>
	</bean>	
	
	<bean id="fileAdapterPSSEFormat" 
	      class="org.interpss.custom.fadpter.PTIFormat"
	      scope="singleton"	
	      p:name="PSS/E Format"
	      p:fileFilterString="raw"
	      p:extension="psse"
	      p:description="PSSE Data Format">
	  	<constructor-arg>
	  		<ref bean="ipssMsgHub"/></constructor-arg>
	    <property name="versionList">
	    	<list>
	    		<value>PSS/E-30</value>
	    		<value>PSS/E-29</value>
	    		<value>PSS/E-26</value>
	    	</list></property>
	</bean>
	
	<bean id="fileAdapterGEFormat" 
	      class="org.interpss.custom.fadpter.GEFormat"
	      scope="singleton"	
	      p:name="GE-PSLF Format"
	      p:fileFilterString="epc"
	      p:extension="ge"
	      p:description="GE Data Exchange Format">
	  	<constructor-arg>
	  		<ref bean="ipssMsgHub"/></constructor-arg>
	</bean>	
	
	<bean id="fileAdapterIpssInternalFormat" 
	      class="org.interpss.custom.fadpter.IpssInternalFormat"
	      scope="singleton"	
	      p:name="InterPSS Internal Format"
	      p:fileFilterString="ipssdata|dat"
	      p:extension="ipssdat"
	      p:description="InterPSS Text File Format">
	  	<constructor-arg>
	  		<ref bean="ipssMsgHub"/></constructor-arg>
	</bean>	      

	<bean id="fileAdapterJavaScripts" 
	      class="org.interpss.custom.script.proj.FileAdapter_JavaScripts"
	      scope="singleton"	
	      p:name="InterPSS JavaScripts"
	      p:fileFilterString="js"
	      p:extension="js"
	      p:description="InterPSS JavaScripts Scripting File" >
	  	<constructor-arg>
	  		<ref bean="ipssMsgHub"/></constructor-arg>
	   <property name="versionList">
	    	<list>
	    		<value>Version 1.0</value>
	    	</list></property>
	</bean>
	
	<bean id="customFileAdapterList" 
	      class="java.util.ArrayList"
	      scope="singleton">	
		<constructor-arg>
			<list>
				<ref bean="fileAdapterBPAFormat"/>
				<!-- ref bean="fileAdapterBPAFormatDStab"/-->
				<ref bean="fileAdapterPSSEFormat"/>
				<ref bean="fileAdapterGEFormat"/>
				<ref bean="fileAdapterUCTEFormat"/>
				<ref bean="fileAdapterIeeeODMXml"/>
				<ref bean="fileAdapterIeeeCommonFormat"/>
				<ref bean="fileAdapterIpssInternalFormat"/>
				<ref bean="fileAdapterJavaScripts"/>
			</list>
		</constructor-arg>
	</bean>
	
	<!--
		Custom Script Run Plugin List
		====================================
	-->	
	<bean id="psseContingencyAnalysis"  
	  	class="org.interpss.custom.run.psseCon.PSSEContingencyAnalysis"
	    scope="singleton"	
	    p:name="PSS/E Contingency Analysis"
	    p:description="PSS/E Contingency analysis control file script run plugin" />

	<bean id="customScriptRunPluginList" 
	      class="java.util.ArrayList"
	      scope="singleton">	
		<constructor-arg>
			<list>
				<ref bean="psseContingencyAnalysis"/>
			</list>
		</constructor-arg>
	</bean>
	
	<!--
		Simulation Result output Custom Plugin List
		===========================================
	-->	
	<bean id="simuResultOutput"  
	  	class="org.interpss.output.OutputSimuResultImpl"
	    scope="prototype"	
	/>
	    
	<!--
		AclfBus Scripting Custom Plugin List
		====================================
	-->	
	<bean id="inductionGenerator"  
	  	class="org.interpss.custom.script.aclf.indgen.InductionGenerator"
	    scope="prototype"	
	    p:name="Aclf Induction Generator"
	    p:desc="InterPSS Aclf Induction Generator implementation" />
<!-- 	    
	<bean id="sampleAclfBusPlugin"  
	  	class="org.interpss.sample.plugin.aclf.funcload.SampleFuncLoad"
	    scope="prototype"	
	    p:name="Sample Aclf Scripting FuncLoad"
	    p:desc="A sample Functional Load Aclf bus scripting implementation" />
 -->
	<bean id="customAclfBusScriptPluginList" 
	      class="java.util.ArrayList"
	      scope="singleton">	
		<constructor-arg>
			<list>
				<ref bean="inductionGenerator"/>
				<!-- ref bean="sampleAclfBusPlugin"/ -->
			</list>
		</constructor-arg>
	</bean>	

	<!--
		AclfBranch Scripting Custom Plugin List
		=======================================
	-->	
<!-- 
	<bean id="sampleAclfLinePlugin"  
	  	class="org.interpss.sample.plugin.aclf.line.SampleLine"
	    scope="prototype"	
	    p:name="Sample Aclf Scripting Line"
	    p:desc="A sample line Aclf branch scripting implementation" />
 -->	    
	<bean id="customAclfBranchScriptPluginList" 
	      class="java.util.ArrayList"
	      scope="singleton">	
		<constructor-arg>
			<list>
				<!-- ref bean="sampleAclfLinePlugin"/ -->
			</list>
		</constructor-arg>
	</bean>	

	<!--
		AcscBus Scripting Custom Plugin List
		====================================
	-->	
	<bean id="customAcscBusScriptPluginList" 
	      class="java.util.ArrayList"
	      scope="singleton">	
		<constructor-arg>
			<list>
			</list>
		</constructor-arg>
	</bean>	

	<!--
		AcscBranch Scripting Custom Plugin List
		=======================================
	-->	
	<bean id="customAcscBranchScriptPluginList" 
	      class="java.util.ArrayList"
	      scope="singleton">	
		<constructor-arg>
			<list>
			</list>
		</constructor-arg>
	</bean>	
	
	<!--
		Dynamic Bus Device Scripting Custom Plugin List
		===============================================
	-->	

	<bean id="sampleStaticZLoadPlugin"  
	  	class="org.interpss.sample.plugin.dstab.dBusDevice.staticz.SampleConstantZ"
	    scope="prototype"	
	    p:name="Sample Static Load"
	    p:desc="A sample static load dynamic bus device implementation" />
	<bean id="customDynamicBusDeviceScriptPluginList" 
	      class="java.util.ArrayList"
	      scope="singleton">	
		<constructor-arg>
			<list>
				<!-- ref bean="sampleStaticZLoadPlugin"/ -->
			</list>
		</constructor-arg>
	</bean>	
	
</beans>
