[Mike 3/22/2011] [open]

- code refactor

   * DCOPFSolver and its implementation follows the visitor pattern, 
        * It is applied to an OpfNetwork object
        * It implements a OPF algorithm
        * All results will be saved to the OpfNetwork object, after the calculation
        
   * A DCOPFSolver implementation will has to major concepts
        * EqIneqMatrixBuilder for build relevant matrixes
        * An optimization routine     
[done]
========================= Closed ==================================================

[Tony 3/21/2011] [closed]
 -fix a bug in EqIneqMatrixBuilder related to opfGenBus when forming the input matrix into DCOPFSolver
  ai->Ai,bi->Bi(Ai=ai*baseMVA,Bi=bi*baseMVA^2)

    
 -to do: 
 for opfBus
 add    
  set/getLMP();

 for opfGenBus
add
  set/getGenPLInequMultiplier// inequ multiplier for genP lower limit
  set/getGenPUInequMultiplier// inequ multiplier for genp upper limit
  set/getGenQLInequMultiplier// inequ multiplier for genQ lower limit
  set/getGenQUInequMultiplier// inequ multiplier for genQ upper limit
 
 for opfBranch
 add
 set/getRatingInequMulitiplier    
 
[Mike 3/21/2011, done]

[Mike 3/21/2011] [closed]

- removed the following three concepts

//	private Hashtable<String,Double> busEqMultiplier=null;
//	private Hashtable<String,Double> genBusIneqMultiplier=null;
//	private Hashtable<String,Double> branchIneqMultiplier=null;   

- removed OpfAlgorithm. It is not used 

[Mike 3/20/2011] [closed]

- change QuadProgCalculator.java to QuadProgDCOPFSolverImpl.java. The naming is confusing
(done)
- add opfBus and OpfBranch 

     AclfBus <- OpfBus <- OpfGenBus
     AclfBranch <- OpfBranch
(done, all code migrated)

        