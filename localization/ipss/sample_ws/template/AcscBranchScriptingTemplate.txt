<AcscBranchScriptingClassname> {  // do not modify this line
/*
  To describe a branch using branch impedance, implement the following, all in PU:
*/
   public Complex yff() { return new Complex(0.0,0.0); }
   public Complex yft() { return new Complex(0.0,0.0); }
   public Complex ytf() { return new Complex(0.0,0.0); }
   public Complex ytt() { return new Complex(0.0,0.0); }

   public Complex yff0() { return new Complex(0.0,0.0); }
   public Complex yft0() { return new Complex(0.0,0.0); }
   public Complex ytf0() { return new Complex(0.0,0.0); }
   public Complex ytt0() { return new Complex(0.0,0.0); }

   public Complex yff2() { return new Complex(0.0,0.0); }
   public Complex yft2() { return new Complex(0.0,0.0); }
   public Complex ytf2() { return new Complex(0.0,0.0); }
   public Complex ytt2() { return new Complex(0.0,0.0); }

/*
   // Implement the following methods, if need to use PQ method

   public double b11ft() { return 0.0; }
   public double b11tf() { return 0.0; }
   public double b1ft() { return 0.0; }
   public double b1ft() { return 0.0; }

   public double getRatingMva1() { return 0.0; }
   public double getRatingMva2() { return 0.0; }
   public double getRatingMva3() { return 0.0; }
*/
}