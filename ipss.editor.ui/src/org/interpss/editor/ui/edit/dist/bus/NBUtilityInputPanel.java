 /*
  * @(#)NBUtilityInputPanel.java   
  *
  * Copyright (C) 2006 www.interpss.org
  *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU LESSER GENERAL PUBLIC LICENSE
  * as published by the Free Software Foundation; either version 2.1
  * of the License, or (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * @Author Mike Zhou
  * @Version 1.0
  * @Date 09/15/2006
  * 
  *   Revision History
  *   ================
  *
  */

package org.interpss.editor.ui.edit.dist.bus;

import java.util.Vector;

import org.interpss.editor.data.dist.DistBusData;
import org.interpss.editor.form.GBusForm;
import org.interpss.editor.jgraph.ui.edit.IFormDataPanel;
import org.interpss.numeric.util.Number2String;
import org.interpss.ui.SwingInputVerifyUtil;

import com.interpss.common.util.IpssLogger;


public class NBUtilityInputPanel extends javax.swing.JPanel  implements IFormDataPanel {
	private static final long serialVersionUID = 1;

	private DistBusData  _data = null;

	public void initPanel() {
		DataVerifier verifier = new DataVerifier();
      this.voltageTextField.setInputVerifier(verifier);
      this.angleTextField.setInputVerifier(verifier);
    	this.mva3PField.setInputVerifier(verifier);
    	this.x_r3PField.setInputVerifier(verifier);
    	this.mva1PField.setInputVerifier(verifier);
      this.x_r1PTextField.setInputVerifier(verifier);
	}

	public void init(Object netContainer, Object form) {
		IpssLogger.getLogger().info("NBUtilityInputPanel init() called");

		this._data = ((GBusForm)form).getDistBusData();
	}
	
    public boolean setForm2Editor() {
		IpssLogger.getLogger().info("NBUtilityInputPanel setForm2Editor() called");

		this.voltageTextField.setText(Number2String.toStr(this._data.getRatedVolt(), "#0.0###"));
		this.vUnitComboBox.setSelectedItem(this._data.getRatedVoltUnit());
		this.angleTextField.setText(Number2String.toStr(this._data.getVAngle(), "#0.0#"));
    	this.mva3PField.setText(Number2String.toStr(this._data.getMvaRating3P(), "#0.0#"));
    	this.x_r3PField.setText(Number2String.toStr(this._data.getX_r3P(), "#0.0##"));
    	this.mva1PField.setText(Number2String.toStr(this._data.getMvaRating1P(), "#0.0#"));
    	this.x_r1PTextField.setText(Number2String.toStr(this._data.getX_r1P(), "#0.0##"));
		this.mvaUnitComboBox.setSelectedItem(this._data.getMvaRatingUnit());
    	return true;
	}
    
    public boolean saveEditor2Form(Vector errMsg) throws Exception {
		IpssLogger.getLogger().info("NBUtilityInputPanel saveEditor2Form() called");

		boolean ok = true;

		if (!SwingInputVerifyUtil.largeThan(this.voltageTextField, 0.0d)) {
			errMsg.add("Utility operation voltage <= 0.0");
			ok = false;
		}
    	this._data.setRatedVolt(SwingInputVerifyUtil.getDouble(this.voltageTextField));
    	this._data.setVAngle(SwingInputVerifyUtil.getDouble(this.angleTextField));
		this._data.setRatedVoltUnit((String)this.vUnitComboBox.getSelectedItem());
		this._data.setVAngleUnit("Deg");

      if (!SwingInputVerifyUtil.largeThan(this.mva3PField, 0.0d)) {
			errMsg.add("Utility three phase SC MVA <= 0.0");
			ok = false;
		}
    	this._data.setMvaRating3P(SwingInputVerifyUtil.getDouble(this.mva3PField));

		if (!SwingInputVerifyUtil.largeThan(this.x_r3PField, 0.0d)) {
			errMsg.add("Utility SC X/R three phase <= 0.0");
			ok = false;
		}
    	this._data.setX_r3P(SwingInputVerifyUtil.getDouble(this.x_r3PField));

		if (!SwingInputVerifyUtil.largeThan(this.mva1PField, 0.0d)) {
			errMsg.add("Utility single phase SC MVA <= 0.0");
			ok = false;
		}
    	this._data.setMvaRating1P(SwingInputVerifyUtil.getDouble(this.mva1PField));

      if (!SwingInputVerifyUtil.largeThan(this.x_r1PTextField, 0.0d)) {
			errMsg.add("Utility SC X/R single phase <= 0.0");
			ok = false;
		}
    	this._data.setX_r1P(SwingInputVerifyUtil.getDouble(this.x_r1PTextField));
      
		this._data.setMvaRatingUnit((String)this.mvaUnitComboBox.getSelectedItem());

		return ok;
    }

    /** Creates new form GenInpitPanel */
    public NBUtilityInputPanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        voltageLabel = new javax.swing.JLabel();
        voltageTextField = new javax.swing.JTextField();
        vUnitComboBox = new javax.swing.JComboBox();
        angleLabel = new javax.swing.JLabel();
        angleTextField = new javax.swing.JTextField();
        angleUnitLabel = new javax.swing.JLabel();
        mva3PLabel = new javax.swing.JLabel();
        mva3PField = new javax.swing.JTextField();
        mva1PLabel = new javax.swing.JLabel();
        mva1PField = new javax.swing.JTextField();
        mvaUnitComboBox = new javax.swing.JComboBox();
        x_r3PLabel3 = new javax.swing.JLabel();
        x_r3PField = new javax.swing.JTextField();
        x_r1PLabel = new javax.swing.JLabel();
        x_r1PTextField = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        voltageLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        voltageLabel.setText("Voltage");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(voltageLabel, gridBagConstraints);

        voltageTextField.setColumns(8);
        voltageTextField.setFont(new java.awt.Font("Dialog", 0, 12));
        voltageTextField.setText("1.0");
        voltageTextField.setName("voltageTextField");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(voltageTextField, gridBagConstraints);

        vUnitComboBox.setFont(new java.awt.Font("Dialog", 0, 10));
        vUnitComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PU", "Volt", "KV" }));
        vUnitComboBox.setName("vUnitComboBox");
        add(vUnitComboBox, new java.awt.GridBagConstraints());

        angleLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        angleLabel.setText("Angle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(angleLabel, gridBagConstraints);

        angleTextField.setColumns(4);
        angleTextField.setText("0");
        angleTextField.setName("angleTextField");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(angleTextField, gridBagConstraints);

        angleUnitLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        angleUnitLabel.setText("(Deg)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(angleUnitLabel, gridBagConstraints);

        mva3PLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        mva3PLabel.setText("SC MVA (3P)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(mva3PLabel, gridBagConstraints);

        mva3PField.setColumns(8);
        mva3PField.setText("0.0");
        mva3PField.setName("mva3PTextField");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        add(mva3PField, gridBagConstraints);

        mva1PLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        mva1PLabel.setText("     SC MVA (1P)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        add(mva1PLabel, gridBagConstraints);

        mva1PField.setColumns(8);
        mva1PField.setText("0.0");
        mva1PField.setName("mva1PTextField");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        add(mva1PField, gridBagConstraints);

        mvaUnitComboBox.setFont(new java.awt.Font("Dialog", 0, 10));
        mvaUnitComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MVA", "KVA", "KAmps", "Amps" }));
        mvaUnitComboBox.setName("mvaUnitComboBox");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(mvaUnitComboBox, gridBagConstraints);

        x_r3PLabel3.setFont(new java.awt.Font("Dialog", 0, 12));
        x_r3PLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        x_r3PLabel3.setText("X/R (3P)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(x_r3PLabel3, gridBagConstraints);

        x_r3PField.setColumns(4);
        x_r3PField.setText("20.0");
        x_r3PField.setName("x_r3PTextField");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(x_r3PField, gridBagConstraints);

        x_r1PLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        x_r1PLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        x_r1PLabel.setText("X/R (1P)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(x_r1PLabel, gridBagConstraints);

        x_r1PTextField.setColumns(4);
        x_r1PTextField.setText("20.0");
        x_r1PTextField.setName("x_r1PTextField");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(x_r1PTextField, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel angleLabel;
    private javax.swing.JTextField angleTextField;
    private javax.swing.JLabel angleUnitLabel;
    private javax.swing.JTextField mva1PField;
    private javax.swing.JLabel mva1PLabel;
    private javax.swing.JTextField mva3PField;
    private javax.swing.JLabel mva3PLabel;
    private javax.swing.JComboBox mvaUnitComboBox;
    private javax.swing.JComboBox vUnitComboBox;
    private javax.swing.JLabel voltageLabel;
    private javax.swing.JTextField voltageTextField;
    private javax.swing.JLabel x_r1PLabel;
    private javax.swing.JTextField x_r1PTextField;
    private javax.swing.JTextField x_r3PField;
    private javax.swing.JLabel x_r3PLabel3;
    // End of variables declaration//GEN-END:variables
    
	class DataVerifier extends javax.swing.InputVerifier {
    	public boolean verify(javax.swing.JComponent input) {
			if (input == null)
				return false;
       		try {
       			if (input == mva3PField || input == mva1PField || 
                   input == x_r3PField || input == x_r1PTextField ||
                   input == voltageTextField )
 	       			return SwingInputVerifyUtil.getDouble((javax.swing.JTextField)input) > 0.0;
 	       	} catch (Exception e) {
 	    		return false;
 	       	}		
			return true;
        }
    }
}
