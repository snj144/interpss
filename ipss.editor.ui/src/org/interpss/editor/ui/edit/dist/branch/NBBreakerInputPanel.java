 /*
  * @(#)NBBreakerInputPanel.java   
  *
  * Copyright (C) 2006 www.interpss.org
  *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU LESSER GENERAL PUBLIC LICENSE
  * as published by the Free Software Foundation; either version 2.1
  * of the License, or (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * @Author Mike Zhou
  * @Version 1.0
  * @Date 09/15/2006
  * 
  *   Revision History
  *   ================
  *
  */

package org.interpss.editor.ui.edit.dist.branch;

import java.util.Vector;

import org.interpss.editor.data.dist.DistBranchData;
import org.interpss.editor.form.GBranchForm;
import org.interpss.editor.form.GFormContainer;
import org.interpss.editor.jgraph.ui.edit.IFormDataDialog;
import org.interpss.editor.jgraph.ui.edit.IFormDataPanel;
import org.interpss.editor.ui.UISpringAppContext;
import org.interpss.numeric.util.Number2String;
import org.interpss.ui.SwingInputVerifyUtil;
   

public class NBBreakerInputPanel extends javax.swing.JPanel implements IFormDataPanel {
	private static final long serialVersionUID = 1;

	private GFormContainer netContainer = null;
	private GBranchForm  _form = null;
    private DistBranchData  _data = null;

	public void initPanel() {
		DataVerifier verifier = new DataVerifier();
    	this.rField.setInputVerifier(verifier);
	}

	public void init(Object aNetContainer, Object form) {
		netContainer = (GFormContainer)aNetContainer;
		_form = (GBranchForm)form;
		_data = _form.getDistBranchData();
	}
	
    public boolean setForm2Editor() {
		this.rField.setText(Number2String.toStr(_data.getZR(), "#0.0###"));
    	this.nameComboBox.setSelectedItem(_form.getName());
        includeSScheduleCheckBox.setSelected(_data.isHasServiceSchedule());
    	return true;
	}
    
    public boolean saveEditor2Form(Vector errMsg) throws Exception {
		boolean ok = true;
		_data.setBranchCode("Breaker");
		_form.setName((String)this.nameComboBox.getSelectedItem());
		if (!SwingInputVerifyUtil.largeThan(this.rField, 0.0d)) {
			errMsg.add("Breaker R <= 0.0");
			ok = false;
		}
    	_data.setZR(SwingInputVerifyUtil.getDouble(this.rField));
    	_data.setZX(0.0d);
    	_data.setZUnit("Ohms");
    	_data.setHalfShuntB(0.0d);

    	_data.setHasServiceSchedule(includeSScheduleCheckBox.isSelected());
    	
    	return ok;
    }

	// The following code is controlled by NetBean IDE
	// ===============================================
    
    /** Creates new form NBBreakerInputPanel */
    public NBBreakerInputPanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        nameLabel = new javax.swing.JLabel();
        nameComboBox = new javax.swing.JComboBox();
        rLabel = new javax.swing.JLabel();
        rField = new javax.swing.JTextField();
        rUnitLabel = new javax.swing.JLabel();
        serviceScheduleButton = new javax.swing.JButton();
        includeSScheduleCheckBox = new javax.swing.JCheckBox();

        setLayout(new java.awt.GridBagLayout());

        nameLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        nameLabel.setText("Breaker Name  ");
        nameLabel.setPreferredSize(new java.awt.Dimension(88, 30));
        add(nameLabel, new java.awt.GridBagConstraints());

        nameComboBox.setEditable(true);
        nameComboBox.setFont(new java.awt.Font("Dialog", 0, 10));
        nameComboBox.setName("nameComboBox");
        add(nameComboBox, new java.awt.GridBagConstraints());

        rLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        rLabel.setText("          R  ");
        add(rLabel, new java.awt.GridBagConstraints());

        rField.setColumns(6);
        rField.setText("0.0");
        rField.setName("rTextField");
        add(rField, new java.awt.GridBagConstraints());

        rUnitLabel.setFont(new java.awt.Font("Dialog", 0, 10));
        rUnitLabel.setText("(Ohms)");
        add(rUnitLabel, new java.awt.GridBagConstraints());

        serviceScheduleButton.setFont(new java.awt.Font("Dialog", 0, 10));
        serviceScheduleButton.setText("Service Schedule ...");
        serviceScheduleButton.setEnabled(false);
        serviceScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceScheduleButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(serviceScheduleButton, gridBagConstraints);

        includeSScheduleCheckBox.setFont(new java.awt.Font("Dialog", 0, 12));
        includeSScheduleCheckBox.setText("Include Service Schedule");
        includeSScheduleCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        includeSScheduleCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        includeSScheduleCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                includeSScheduleCheckBoxItemStateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(includeSScheduleCheckBox, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents

    private void includeSScheduleCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_includeSScheduleCheckBoxItemStateChanged
    	if (includeSScheduleCheckBox.isSelected())
    		serviceScheduleButton.setEnabled(true);
    	else
    		serviceScheduleButton.setEnabled(false);
    }//GEN-LAST:event_includeSScheduleCheckBoxItemStateChanged

    private void serviceScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceScheduleButtonActionPerformed
    	IFormDataDialog dialog = UISpringAppContext.getServiceScheduleDialog();
    	dialog.init(netContainer, _data);
    }//GEN-LAST:event_serviceScheduleButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox includeSScheduleCheckBox;
    private javax.swing.JComboBox nameComboBox;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField rField;
    private javax.swing.JLabel rLabel;
    private javax.swing.JLabel rUnitLabel;
    private javax.swing.JButton serviceScheduleButton;
    // End of variables declaration//GEN-END:variables
    
	class DataVerifier extends javax.swing.InputVerifier {
    	public boolean verify(javax.swing.JComponent input) {
			if (input == null)
				return false;
       		try {
       			if (input == rField)
 	       			return SwingInputVerifyUtil.getDouble((javax.swing.JTextField)input) > 0.0;
 	       	} catch (Exception e) {
 	    		return false;
 	       	}		
			return true;
        }
    }
}
