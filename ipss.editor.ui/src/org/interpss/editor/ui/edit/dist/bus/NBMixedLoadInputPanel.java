 /*
  * @(#)NBMixedLoadInputPanel.java   
  *
  * Copyright (C) 2006 www.interpss.org
  *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU LESSER GENERAL PUBLIC LICENSE
  * as published by the Free Software Foundation; either version 2.1
  * of the License, or (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * @Author Mike Zhou
  * @Version 1.0
  * @Date 09/15/2006
  * 
  *   Revision History
  *   ================
  *
  */

package org.interpss.editor.ui.edit.dist.bus;

import java.util.Vector;

import org.interpss.editor.data.dist.DistBusData;
import org.interpss.editor.form.GBusForm;
import org.interpss.editor.form.GFormContainer;
import org.interpss.editor.jgraph.ui.edit.IFormDataDialog;
import org.interpss.editor.jgraph.ui.edit.IFormDataPanel;
import org.interpss.numeric.util.Number2String;
import org.interpss.spring.UISpringFactory;
import org.interpss.ui.SwingInputVerifyUtil;

import com.interpss.common.util.IpssLogger;


public class NBMixedLoadInputPanel extends javax.swing.JPanel implements IFormDataPanel {
	private static final long serialVersionUID = 1;

	private GFormContainer netContainer = null;
	private DistBusData  data = null;

	public void initPanel() {
		DataVerifier verifier = new DataVerifier();
    	this.totalKVAField.setInputVerifier(verifier);
    	this.pfField.setInputVerifier(verifier);
    	this.ratedVTextField.setInputVerifier(verifier);
    	this.motorPercentTextField.setInputVerifier(verifier);
	}
    
	public void init(Object aNetContainer, Object form) {
		IpssLogger.getLogger().info("NBMixedLoadInputPanel init() called");

		this.netContainer = (GFormContainer)aNetContainer;
		this.data = ((GBusForm)form).getDistBusData();
	}
	
    public boolean setForm2Editor() {
		IpssLogger.getLogger().info("NBMixedLoadInputPanel setForm2Editor() called");

		this.totalKVAField.setText(Number2String.toStr(this.data.getBusRating(), "#0.0#"));
		this.totalKVAUnitComboBox.setSelectedItem(this.data.getBusRatingUnit());
        this.ratedVTextField.setText(Number2String.toStr(this.data.getRatedVolt(), "#0.0##"));
        this.ratedVUnitComboBox.setSelectedItem(this.data.getRatedVoltUnit());
    	this.pfField.setText(Number2String.toStr(this.data.getPFactor(), "#0.0#"));
		this.pfUnitComboBox.setSelectedItem(this.data.getPFactorUnit());
        this.motorPercentTextField.setText(Number2String.toStr(this.data.getMotorPercent(), "#0.##"));

        includeLScheduleCheckBox.setSelected(data.isHasLoadSchedule());        
        
        return true;
	}
    
    public boolean saveEditor2Form(Vector errMsg) throws Exception {
		IpssLogger.getLogger().info("NBMixedLoadInputPanel saveEditor2Form() called");

		boolean ok = true;

		if (!SwingInputVerifyUtil.largeThan(this.totalKVAField, 0.0d)) {
			errMsg.add("Total KVA <= 0.0");
			ok = false;
		}
    	this.data.setBusRating(SwingInputVerifyUtil.getDouble(this.totalKVAField));

		this.data.setBusRatingUnit((String)this.totalKVAUnitComboBox.getSelectedItem());

		if (!SwingInputVerifyUtil.largeThan(this.ratedVTextField, 0.0d)) {
			errMsg.add("Rated voltage <= 0.0");
			ok = false;
		}
    	this.data.setRatedVolt(SwingInputVerifyUtil.getDouble(this.ratedVTextField));

		this.data.setRatedVoltUnit((String)this.ratedVUnitComboBox.getSelectedItem());

		/* pf could + or -
        if (!VerifyUtil.largeThan(this.pfField, 0.0d)) {
			errMsg.add("Power factor <= 0.0");
			ok = false;
		}
		*/
    	this.data.setPFactor(SwingInputVerifyUtil.getDouble(this.pfField));

		this.data.setPFactorUnit((String)this.pfUnitComboBox.getSelectedItem());

        if (!SwingInputVerifyUtil.largeEqualThan(this.motorPercentTextField, 0.0d)) {
			errMsg.add("Motor percent < 0.0");
			ok = false;
		}
    	this.data.setMotorPercent(SwingInputVerifyUtil.getDouble(this.motorPercentTextField));

    	data.setHasLoadSchedule(includeLScheduleCheckBox.isSelected());
    	
    	return ok;
    }

    /** Creates new form NBMotorInputPanel */
    public NBMixedLoadInputPanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        totalKVALabel = new javax.swing.JLabel();
        totalKVAField = new javax.swing.JTextField();
        totalKVAUnitComboBox = new javax.swing.JComboBox();
        ratedVLabel = new javax.swing.JLabel();
        ratedVTextField = new javax.swing.JTextField();
        ratedVUnitComboBox = new javax.swing.JComboBox();
        pfLabel = new javax.swing.JLabel();
        pfField = new javax.swing.JTextField();
        pfUnitComboBox = new javax.swing.JComboBox();
        motorPercnetLabel = new javax.swing.JLabel();
        motorPercentTextField = new javax.swing.JTextField();
        includeLScheduleCheckBox = new javax.swing.JCheckBox();
        loadScheduleButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        totalKVALabel.setFont(new java.awt.Font("Dialog", 0, 12));
        totalKVALabel.setText("Total KVA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(totalKVALabel, gridBagConstraints);

        totalKVAField.setColumns(8);
        totalKVAField.setText("0.0");
        totalKVAField.setName("totalKVATextField");
        add(totalKVAField, new java.awt.GridBagConstraints());

        totalKVAUnitComboBox.setFont(new java.awt.Font("Dialog", 0, 10));
        totalKVAUnitComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "KVA", "MVA" }));
        totalKVAUnitComboBox.setName("totalKVAUnitComboBox");
        add(totalKVAUnitComboBox, new java.awt.GridBagConstraints());

        ratedVLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        ratedVLabel.setText("Rated V");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 5);
        add(ratedVLabel, gridBagConstraints);

        ratedVTextField.setColumns(8);
        ratedVTextField.setFont(new java.awt.Font("Dialog", 0, 12));
        ratedVTextField.setText("1.0");
        ratedVTextField.setName("ratedVTextField");
        add(ratedVTextField, new java.awt.GridBagConstraints());

        ratedVUnitComboBox.setFont(new java.awt.Font("Dialog", 0, 10));
        ratedVUnitComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PU", "Volt", "KV" }));
        ratedVUnitComboBox.setName("ratedVUnitComboBox");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(ratedVUnitComboBox, gridBagConstraints);

        pfLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        pfLabel.setText("PFactor  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(pfLabel, gridBagConstraints);

        pfField.setColumns(4);
        pfField.setText("0.8");
        pfField.setName("pfTextField");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(pfField, gridBagConstraints);

        pfUnitComboBox.setFont(new java.awt.Font("Dialog", 0, 10));
        pfUnitComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PU", "%" }));
        pfUnitComboBox.setName("pfUnitComboBox");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(pfUnitComboBox, gridBagConstraints);

        motorPercnetLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        motorPercnetLabel.setText("Motor%");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 5);
        add(motorPercnetLabel, gridBagConstraints);

        motorPercentTextField.setColumns(4);
        motorPercentTextField.setFont(new java.awt.Font("Dialog", 0, 12));
        motorPercentTextField.setText("80");
        motorPercentTextField.setName("motorPercentTextField");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(motorPercentTextField, gridBagConstraints);

        includeLScheduleCheckBox.setFont(new java.awt.Font("Dialog", 0, 12));
        includeLScheduleCheckBox.setText("Include Load Schedule");
        includeLScheduleCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        includeLScheduleCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        includeLScheduleCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                includeLScheduleCheckBoxItemStateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 0);
        add(includeLScheduleCheckBox, gridBagConstraints);

        loadScheduleButton.setFont(new java.awt.Font("Dialog", 0, 10));
        loadScheduleButton.setText("Load Schedule ...");
        loadScheduleButton.setEnabled(false);
        loadScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadScheduleButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 0);
        add(loadScheduleButton, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void loadScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadScheduleButtonActionPerformed
    	IFormDataDialog dialog = UISpringFactory.getLoadScheduleDialog();
    	dialog.init(netContainer, data);
    }//GEN-LAST:event_loadScheduleButtonActionPerformed

    private void includeLScheduleCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_includeLScheduleCheckBoxItemStateChanged
    	if (includeLScheduleCheckBox.isSelected())
    		loadScheduleButton.setEnabled(true);
    	else
    		loadScheduleButton.setEnabled(false);
    }//GEN-LAST:event_includeLScheduleCheckBoxItemStateChanged
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox includeLScheduleCheckBox;
    private javax.swing.JButton loadScheduleButton;
    private javax.swing.JTextField motorPercentTextField;
    private javax.swing.JLabel motorPercnetLabel;
    private javax.swing.JTextField pfField;
    private javax.swing.JLabel pfLabel;
    private javax.swing.JComboBox pfUnitComboBox;
    private javax.swing.JLabel ratedVLabel;
    private javax.swing.JTextField ratedVTextField;
    private javax.swing.JComboBox ratedVUnitComboBox;
    private javax.swing.JTextField totalKVAField;
    private javax.swing.JLabel totalKVALabel;
    private javax.swing.JComboBox totalKVAUnitComboBox;
    // End of variables declaration//GEN-END:variables
    
	class DataVerifier extends javax.swing.InputVerifier {
    	public boolean verify(javax.swing.JComponent input) {
			if (input == null)
				return false;
       		try {
       			if (input == totalKVAField || input == ratedVTextField )
 	       			return SwingInputVerifyUtil.getDouble((javax.swing.JTextField)input) > 0.0;
               else if ( input == motorPercentTextField )
 	       			return SwingInputVerifyUtil.getDouble((javax.swing.JTextField)input) >= 0.0;
 	       	} catch (Exception e) {
 	    		return false;
 	       	}		
			return true;
        }
    }
}
